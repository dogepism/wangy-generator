{"version":3,"sources":["TemplateComplete.js","theme.js","global.js","index.js"],"names":["TemplateComplete","props","FinishedWords","selection","words","RenderTemplate","className","theme","Button","variant","onClick","copy","lightTheme","body","text","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","App","useState","setWords","setSelection","template","setTheme","useEffect","type","value","onChange","event","target","defaultValue","e","ReactDOM","render","document","getElementById"],"mappings":"sOAqCeA,MAhBf,SAA0BC,GAEtB,IAAMC,EAjBa,SAACC,EAAWC,GAC/B,OAAQD,GACJ,IAAK,SACD,MAAM,yBAAN,OAAgCC,EAAhC,qBAAkDA,EAAlD,wBACJ,IAAK,QACD,MAAM,yBAAN,OAAgCA,EAAhC,qCAAkEA,EAAlE,eACJ,IAAK,OACD,MAAM,wBAAN,OAA+BA,EAA/B,0CAAsEA,GAC1E,IAAK,QACD,MAAM,uBAAN,OAA8BA,EAA9B,wCAAmEA,GACvE,QACI,MAAO,IAMOC,CAAeJ,EAAME,UAAWF,EAAMG,OAE5D,OACI,sBAAKE,UAAU,iBAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAA2B,UAAhBL,EAAMM,MAAoB,iBAAmB,GAA7D,SAAkEL,MAEtE,sBAAKI,UAAU,WAAf,UACI,cAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAMC,IAAKT,IAA9C,+BAAyF,W,OC9B5FU,EAAa,CACtBC,KAAM,UACNC,KAAM,UACNC,aAAc,OACdC,SAAU,qCAGCC,EAAY,CACvBJ,KAAM,UACNC,KAAM,UACNC,aAAc,UACdC,SAAU,qC,0OCXP,IAAME,EAAeC,YAAH,KAEP,qBAAGZ,MAAkBM,QAC1B,qBAAGN,MAAkBO,QCQlC,SAASM,IAAM,MAEaC,mBAAS,IAFtB,mBAENjB,EAFM,KAECkB,EAFD,OAGqBD,mBAAS,UAH9B,mBAGNlB,EAHM,KAGKoB,EAHL,OAKiBF,oBAAS,GAL1B,gCAYmBA,mBAAS,KAZ5B,mBAYNG,EAZM,aAaaH,mBAAS,UAbtB,mBAaNd,EAbM,KAaCkB,EAbD,KAwBb,OAFAC,qBAAU,WAAQH,EAAa,YAAa,IAG1C,cAAC,IAAD,CAAehB,MAAiB,UAAVA,EAAoBK,EAAaK,EAAvD,SACE,qCACA,cAACC,EAAD,IACA,8BACE,sBAAKZ,UAAU,iBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,uBAAOA,UAAqB,UAAVC,EAAoB,iBAAmB,GAAzD,mBAGA,uBAAOD,UAAU,eAAeqB,KAAK,OAAOC,MAAOxB,EAAOyB,SAjBrD,SAACC,GAChBR,EAASQ,EAAMC,OAAOH,aAkBd,sBAAKtB,UAAU,MAAf,UACE,6CAGA,yBAAQ0B,aAAa,SAAS1B,UAAU,eAAeuB,SAAU,SAAAI,GAAC,OAAIV,EAAaU,EAAEF,OAAOH,QAA5F,UACE,wBAAQA,MAAM,SAAd,wBACA,wBAAQA,MAAM,QAAd,wBACA,wBAAQA,MAAM,QAAd,wBACA,wBAAQA,MAAM,OAAd,iCAMN,sBAAKtB,UAAU,MAAf,UACGkB,EACD,cAAC,EAAD,CAAkBrB,UAAWA,EAAWC,MAAOA,EAAOG,MAAOA,OAG/D,uBAEA,qBAAKD,UAAU,MAAf,SACA,wBAAQI,QA7CK,WACCe,EAAV,UAAVlB,EAA6B,OAAmB,UA4C1C,sCAWV2B,IAASC,OACP,cAACf,EAAD,IACAgB,SAASC,eAAe,W","file":"static/js/main.e328263b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst RenderTemplate = (selection, words) => {\r\n    switch (selection) {\r\n        case 'keqing':\r\n            return `eda cuma pengen jilat ${words}, soalnya ${words} adalah kesukaan eda`\r\n        case 'venti':\r\n            return `eda pergi buat nampol ${words}, darikemaren didiemin si ${words} batu bener`\r\n        case 'qiqi':\r\n            return `eda ke pasar nyariin ${words}, kemaren belum bayar utang si ${words}`\r\n        case 'ganyu':\r\n            return `eda ditampolin sama ${words}, trus eda lari dari kejaran ${words}`\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nfunction TemplateComplete(props) {\r\n\r\n    const FinishedWords = RenderTemplate(props.selection, props.words)\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className={props.theme === 'light' ? \"textColorTheme\" : \"\"}>{FinishedWords}</div>\r\n            </div>\r\n            <div className=\"row mt-5\">\r\n                <Button variant=\"primary\" onClick={() => copy(FinishedWords)}>Copy To Clipboard</Button>{' '}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TemplateComplete;","// theme.js\r\nexport const lightTheme = {\r\n    body: '#E2E2E2',\r\n    text: '#363537',\r\n    toggleBorder: '#FFF',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\r\n  }\r\n  \r\n  export const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#6B8096',\r\n    gradient: 'linear-gradient(#091236, #1E215D)',\r\n  }","import { createGlobalStyle} from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n    transition: all 0.50s linear;\r\n  }\r\n  `","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport TemplateComplete from './TemplateComplete';\r\nimport { ToggleButton, ButtonGroup } from 'react-bootstrap';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme } from './theme';\r\nimport { GlobalStyles } from './global';\r\n\r\n\r\n\r\nfunction App() {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [words, setWords] = useState('');\r\n  const [selection, setSelection] = useState('keqing')\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const radios = [\r\n    { name: 'Light Mode', value: 'light' },\r\n    { name: 'Dark Mode', value: 'dark' },\r\n  ];\r\n\r\n  // eslint-disable-next-line\r\n  const [template, setTemplate] = useState('');\r\n  const [theme, setTheme] = useState('light');\r\n  const themeToggler = () => {\r\n    theme === 'light' ? setTheme('dark') : setTheme('light')\r\n}\r\n\r\n  const onChange = (event) => {\r\n    setWords(event.target.value);\r\n\r\n  };\r\n  useEffect(() => { setSelection('keqing') }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\r\n      <>\r\n      <GlobalStyles />\r\n      <div>\r\n        <div className=\"container pt-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <label className={theme === 'light' ? \"textColorTheme\" : \"\"}>\r\n                Name:\r\n            </label>\r\n              <input className=\"form-control\" type=\"text\" value={words} onChange={onChange} />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label>\r\n                Template\r\n          </label>\r\n              <select defaultValue=\"keqing\" className=\"form-control\" onChange={e => setSelection(e.target.value)}>\r\n                <option value=\"keqing\">template 1</option>\r\n                <option value=\"venti\">template 2</option>\r\n                <option value=\"ganyu\">template 3</option>\r\n                <option value=\"qiqi\">template 4</option>\r\n              </select>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            {template}\r\n            <TemplateComplete selection={selection} words={words} theme={theme} />\r\n          </div>\r\n\r\n          <br />\r\n\r\n          <div className=\"row\">\r\n          <button onClick={themeToggler}>Switch Theme</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}